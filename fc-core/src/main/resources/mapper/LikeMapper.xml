<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gyh.fleacampus.core.mapper.LikeMapper">
    <resultMap id="BaseResultMap" type="com.gyh.fleacampus.core.model.Like">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="post_id" jdbcType="INTEGER" property="postId"/>
        <result column="comment_id" jdbcType="INTEGER" property="commentId"/>
        <result column="reply_id" jdbcType="INTEGER" property="replyId"/>
        <result column="status" jdbcType="SMALLINT" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, post_id, comment_id, reply_id, "status"
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from "fc_like"
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="findSelectiveForUpdate" parameterType="com.gyh.fleacampus.core.model.Like" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from "fc_like"
        where user_id = #{userId,jdbcType=INTEGER}
        AND post_id = #{postId,jdbcType=INTEGER}
        AND comment_id = #{commentId,jdbcType=INTEGER}
        AND reply_id = #{replyId,jdbcType=INTEGER}
        AND "status" = #{status,jdbcType=SMALLINT}
        for update
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from "fc_like"
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByPostId" parameterType="java.lang.Integer">
        delete
        from "fc_like"
        where post_id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.gyh.fleacampus.core.model.Like"
            useGeneratedKeys="true">
        insert into "fc_like" (user_id, post_id, comment_id,
                               reply_id, "status")
        values (#{userId,jdbcType=INTEGER}, #{postId,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER},
                #{replyId,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.gyh.fleacampus.core.model.Like"
            useGeneratedKeys="true">
        insert into "fc_like"
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="postId != null">post_id,</if>
            <if test="commentId != null">comment_id,</if>
            <if test="replyId != null">reply_id,</if>
            <if test="status != null">"status",</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId,jdbcType=INTEGER},</if>
            <if test="postId != null">#{postId,jdbcType=INTEGER},</if>
            <if test="commentId != null">#{commentId,jdbcType=INTEGER},</if>
            <if test="replyId != null">#{replyId,jdbcType=INTEGER},</if>
            <if test="status != null">#{status,jdbcType=SMALLINT},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.gyh.fleacampus.core.model.Like">
        update "fc_like"
        <set>
            <if test="userId != null">user_id = #{userId,jdbcType=INTEGER},</if>
            <if test="postId != null">post_id = #{postId,jdbcType=INTEGER},</if>
            <if test="commentId != null">comment_id = #{commentId,jdbcType=INTEGER},</if>
            <if test="replyId != null">reply_id = #{replyId,jdbcType=INTEGER},</if>
            <if test="status != null">"status" = #{status,jdbcType=SMALLINT},</if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.gyh.fleacampus.core.model.Like">
        update "fc_like"
        set user_id    = #{userId,jdbcType=INTEGER},
            post_id    = #{postId,jdbcType=INTEGER},
            comment_id = #{commentId,jdbcType=INTEGER},
            reply_id   = #{replyId,jdbcType=INTEGER},
            "status"   = #{status,jdbcType=SMALLINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>